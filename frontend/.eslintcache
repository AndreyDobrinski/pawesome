[{"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\index.js":"1","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\App.js":"2","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\reportWebVitals.js":"3","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\serviceWorkerRegistration.js":"4","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\store.js":"5","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\routes.js":"6","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\reducers\\userReducer.js":"7","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\reducers\\petReducer.js":"8","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\AppHeader.jsx":"9","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\pages\\PetDetails.jsx":"10","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\pages\\Pet.jsx":"11","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\pages\\Home.jsx":"12","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\actions\\userActions.js":"13","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\userService.js":"14","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\httpService.js":"15","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\PetList.jsx":"16","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\PetPreview.jsx":"17","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\actions\\petActions.js":"18","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\petService.js":"19","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\utilService.js":"20","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\storageService.js":"21","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\btns\\LikeBtn.jsx":"22"},{"size":1156,"mtime":1610479767212,"results":"23","hashOfConfig":"24"},{"size":546,"mtime":1610479767142,"results":"25","hashOfConfig":"24"},{"size":377,"mtime":1610479767214,"results":"26","hashOfConfig":"24"},{"size":5201,"mtime":1610479767216,"results":"27","hashOfConfig":"24"},{"size":762,"mtime":1610541389999,"results":"28","hashOfConfig":"24"},{"size":348,"mtime":1610541389994,"results":"29","hashOfConfig":"24"},{"size":629,"mtime":1610479767221,"results":"30","hashOfConfig":"24"},{"size":923,"mtime":1610552201819,"results":"31","hashOfConfig":"24"},{"size":9793,"mtime":1610623570437,"results":"32","hashOfConfig":"24"},{"size":319,"mtime":1610541389989,"results":"33","hashOfConfig":"24"},{"size":769,"mtime":1610553630689,"results":"34","hashOfConfig":"24"},{"size":2006,"mtime":1610623570446,"results":"35","hashOfConfig":"24"},{"size":1647,"mtime":1610479767220,"results":"36","hashOfConfig":"24"},{"size":2078,"mtime":1610479767218,"results":"37","hashOfConfig":"24"},{"size":1076,"mtime":1610479767217,"results":"38","hashOfConfig":"24"},{"size":283,"mtime":1610557056439,"results":"39","hashOfConfig":"24"},{"size":960,"mtime":1610618037677,"results":"40","hashOfConfig":"24"},{"size":1522,"mtime":1610553547924,"results":"41","hashOfConfig":"24"},{"size":873,"mtime":1610554050186,"results":"42","hashOfConfig":"24"},{"size":1088,"mtime":1610479767218,"results":"43","hashOfConfig":"24"},{"size":371,"mtime":1610479767217,"results":"44","hashOfConfig":"24"},{"size":738,"mtime":1610617815408,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1vwsbh2",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\index.js",[],["92","93"],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\App.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\reportWebVitals.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\serviceWorkerRegistration.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\store.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\routes.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\reducers\\userReducer.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\reducers\\petReducer.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\AppHeader.jsx",["94"],"import { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout, signup, removeUser, loadUsers } from '../store/actions/userActions'\r\n\r\n\r\n\r\n\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\n\r\nexport class _AppHeader extends Component {\r\n\r\n\r\n    state = {\r\n        isNewUser: false,\r\n        msg: '',\r\n        modalSignClicked: false,\r\n        loginCred: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        signupCred: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n\r\n    }\r\n\r\n\r\n    doSignup = async (ev) => {\r\n        ev.preventDefault()\r\n        const { username, password, fullname } = this.state.signupCred\r\n        if (!username || !password || !fullname) {\r\n            return this.setState({ msg: 'All inputs are required' })\r\n        }\r\n        const signupCreds = { username, password, fullname }\r\n        this.props.signup(signupCreds)\r\n        this.setState({\r\n            signupCred: {\r\n                username: '',\r\n                password: '',\r\n                fullname: ''\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    signupHandleChange = (ev) => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n\r\n\r\n    }\r\n\r\n\r\n    doLogin = async (ev) => {\r\n        ev.preventDefault()\r\n\r\n        const { username, password } = this.state.loginCred\r\n        if (!username) {\r\n            return this.setState({ msg: 'Please enter user/password' })\r\n        }\r\n\r\n        const userCreds = { username, password }\r\n\r\n        try {\r\n            this.props.login(userCreds)\r\n            this.setState({\r\n                loginCred: {\r\n                    username: '',\r\n                    password: ''\r\n                }\r\n            })\r\n        } catch (err) {\r\n            this.setState({ msg: 'Login failed, try again.' })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    loginHandleChange = (ev) => {\r\n        const { name, value } = ev.target\r\n\r\n        this.setState(prevState => ({\r\n            loginCred: {\r\n                ...prevState.loginCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    newUser = (ev) => {\r\n        ev.preventDefault()\r\n        const lastAns = this.state.isNewUser\r\n        this.setState({ isNewUser: !lastAns })\r\n    }\r\n\r\n\r\n\r\n\r\n    onOpenSignModal = () => {\r\n        this.setState({\r\n            modalSignClicked: true\r\n        })\r\n\r\n    }\r\n\r\n    onCloseSignModal = () => {\r\n        this.setState({\r\n            modalSignClicked: false\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        let signupSection = (\r\n            <div className=\"modal-content\">\r\n                <span className=\"close\" onClick={() => this.onCloseSignModal()}>&times;</span>\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\" >\r\n                    <CssBaseline />\r\n                    <div style={{ marginTop: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', }}>\r\n                        <Avatar style={{ margin: '10px', backgroundColor: 'blue', }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h2\" variant=\"h5\">\r\n                            Sign up\r\n                </Typography>\r\n\r\n                        <div className=\"modal-body\">\r\n\r\n                            <form onSubmit={this.doSignup} style={{ width: '100%', marginTop: '5px' }} noValidate>\r\n\r\n                                <TextField variant=\"filled\" margin=\"normal\" value={this.state.signupCred.username} required\r\n                                    onChange={this.signupHandleChange} fullWidth label=\"Username\" name=\"username\" autoFocus />\r\n\r\n                                <TextField variant=\"filled\" margin=\"normal\" value={this.state.signupCred.fullname} required\r\n                                    onChange={this.signupHandleChange} fullWidth label=\"Fullname\" name=\"fullname\" />\r\n\r\n                                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth value={this.state.signupCred.password}\r\n                                    onChange={this.signupHandleChange} name=\"password\" label=\"Password\" type=\"password\" autoComplete=\"current-password\" />\r\n\r\n                                <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }}>\r\n                                    Sign In\r\n                      </Button>\r\n\r\n                                <Grid container>\r\n                                    <Grid item>\r\n                                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }} onClick={this.newUser}>\r\n                                            {\"Have a user? login!\"}\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n\r\n        let loginSection = (\r\n            <div className=\"modal-content\" >\r\n\r\n                <span className=\"close\" onClick={() => this.onCloseSignModal()}>&times;</span>\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\" >\r\n                    <CssBaseline />\r\n                    <div style={{ marginTop: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', }}>\r\n\r\n                        <Avatar style={{ margin: '10px', backgroundColor: 'blue', }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h2\" variant=\"h5\">\r\n                            Log in\r\n                </Typography>\r\n\r\n                        <div className=\"modal-body\">\r\n\r\n                            <form onSubmit={this.doLogin} style={{ width: '100%', marginTop: '5px' }} noValidate>\r\n\r\n                                <TextField variant=\"filled\" margin=\"normal\" value={this.state.loginCred.username} required\r\n                                    onChange={this.loginHandleChange} fullWidth label=\"Username\" name=\"username\" autoFocus />\r\n\r\n                                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth value={this.state.loginCred.password}\r\n                                    onChange={this.loginHandleChange} name=\"password\" label=\"Password\" type=\"password\" autoComplete=\"current-password\" />\r\n\r\n                                <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }}>\r\n                                    Log In\r\n                      </Button>\r\n\r\n                                <Grid container>\r\n                                    <Grid item>\r\n                                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }} onClick={this.newUser}>\r\n                                            {\"Don't have an account? Sign Up\"}\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Container >\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n        const { loggedInUser } = this.props\r\n        const { isNewUser } = this.state\r\n\r\n        return (\r\n            <nav className=\"appHeader-container \">\r\n                <div className=\"appHeader-content flex align-center justify-between container\">\r\n\r\n                    <Link to=\"/\">\r\n                        <div className=\"appHeader-logo flex\">\r\n\r\n                            <div className=\"appHeader-logo-img\">&</div>\r\n                            <div><span className=\"appHeader-name-paw\">Paw</span>eSome</div>\r\n\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <div>Search</div>\r\n\r\n                    <div className=\"appHeader-link-container flex\">\r\n\r\n                        <Link to=\"/pet\"><div className=\"appHeader-link-pets\">Pets</div></Link>\r\n                        <div className=\"appHeader-link-login\" onClick={this.onOpenSignModal}>\r\n                            {!loggedInUser && \"Signup\"}\r\n                            {loggedInUser && `Welcome ${loggedInUser.name}`}\r\n                            </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                {this.state.modalSignClicked && <div className=\"modal\"  >\r\n\r\n                    {!loggedInUser && !isNewUser && loginSection}\r\n                    {!loggedInUser && isNewUser && signupSection}\r\n\r\n                </div>\r\n                }\r\n            </nav>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    removeUser,\r\n    loadUsers\r\n}\r\n\r\n\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)\r\n\r\n","D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\pages\\PetDetails.jsx",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\pages\\Pet.jsx",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\pages\\Home.jsx",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\actions\\userActions.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\userService.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\httpService.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\PetList.jsx",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\PetPreview.jsx",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\store\\actions\\petActions.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\petService.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\utilService.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\services\\storageService.js",[],"D:\\coding-academy\\pawesome\\pawesome\\frontend\\src\\cmps\\btns\\LikeBtn.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":26},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]